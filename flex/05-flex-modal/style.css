@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

html, body {
  height: 100%;
}

body {
  font-family: Roboto, sans-serif;
  margin: 0;
  background: #aaa;
  color: #333;
  /* I'll give you this one for free lol */
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal {
  background: white;
  width: 480px;
  border-radius: 10px;
  box-shadow: 2px 4px 16px rgba(0,0,0,.2);
}

.icon {
  color: royalblue;
  font-size: 26px;
  font-weight: 700;
  background: lavender;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.close-button {
  background: #eee;
  border-radius: 50%;
  color: #888;
  font-weight: 400;
  font-size: 16px;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

button {
  padding: 8px 16px;
  border-radius: 8px;
}

button.continue {
  background: royalblue;
  border: 1px solid royalblue;
  color: white;
}

button.cancel {
  background: white;
  border: 1px solid #ddd;
  color: royalblue;
}

/* SOLUTION BEGIN */
.modal {
  display: flex;
  padding: 10px;
  gap: 10px;
  justify-content: space-between;
}

.icon {
  flex-shrink: 0; /* do I want it to grow tho?*/
}

.modal-title {
  display: flex;
  justify-content: space-between;
  align-content: center;
  font-weight: 700;
  font-size: 18px;
}

.modal-content {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* FEEDBACK
based on reading the solution posted by odin on github,
a better way to organize the content in the modal would be 
to use just one extra flex-container to set apart the content
and the !-icon. Then nest the X-button inside the header div and
do the alignment in that div (justify-content: space between would work).
Also, instead of using that second container as another flex container
(but set to flex-direction: column), just allow it tobe a regular
div with display: block and fix the spacing with the margin property.*/